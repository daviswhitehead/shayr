# https://www.rubydoc.info/gems/cocoapods/Pod/Installer
# https://stackoverflow.com/questions/30244675/how-can-i-modify-other-ldflags-via-cocoapods-post-install-hook

install! 'cocoapods', :deterministic_uuids => false
platform :ios, '11.0'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

def shared_pods
  # React Native Core
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/React'
  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
  pod 'React-fishhook', :path => '../node_modules/react-native/Libraries/fishhook'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'

  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  # React Native Additional
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  pod 'react-native-fbsdk', :path => '../node_modules/react-native-fbsdk'
  pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'
  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'
  pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'
  
  # manually linking react-native-config due to share extension issues with pods
  # pod 'react-native-config', :path => '../node_modules/react-native-config'

  # Firebase
  pod 'Firebase/Auth', '~> 6.2.0'
  pod 'Firebase/Core', '~> 6.2.0'
  pod 'Firebase/DynamicLinks', '~> 6.2.0'
  pod 'Firebase/Firestore', '~> 6.2.0'
  pod 'Firebase/Messaging', '~> 6.2.0'
  
  # Crashlytics
  pod 'Fabric', '~> 1.9.0'
  pod 'Crashlytics', '~> 3.12.0'

  # Codepush
  pod 'CodePush', :path => '../node_modules/react-native-code-push'

end

target 'shayr' do
  shared_pods

  # Facebook
  pod 'FBSDKCoreKit', '~> 5.3.0'
  pod 'FBSDKLoginKit', '~> 5.3.0'
  pod 'FBSDKShareKit', '~> 5.3.0'

  use_native_modules!
  pod 'RNScreens', :path => '../node_modules/react-native-screens'

end

target 'ShareExtension' do
  shared_pods

  use_native_modules!
end

post_install do |installer|
  # Fix Fabric Headers
  system('mkdir ./Pods/Headers/Public/Fabric')
  system('cp ./Pods/Fabric/iOS/Fabric.framework/Headers/Fabric.h ./Pods/Headers/Public/Fabric/Fabric.h')
  system('cp ./Pods/Fabric/iOS/Fabric.framework/Headers/FABAttributes.h ./Pods/Headers/Public/Fabric/FABAttributes.h')
  
  # Fix Crashlytics Headers
  system('mkdir ./Pods/Headers/Public/Crashlytics')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/Crashlytics.h ./Pods/Headers/Public/Crashlytics/Crashlytics.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSStackFrame.h ./Pods/Headers/Public/Crashlytics/CLSStackFrame.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSReport.h ./Pods/Headers/Public/Crashlytics/CLSReport.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSLogging.h ./Pods/Headers/Public/Crashlytics/CLSLogging.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSAttributes.h ./Pods/Headers/Public/Crashlytics/CLSAttributes.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/Answers.h ./Pods/Headers/Public/Crashlytics/Answers.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/ANSCompatibility.h ./Pods/Headers/Public/Crashlytics/ANSCompatibility.h')

  # Fix libraries breaking the Share Extension
  installer.pods_project.targets.each do |target|
    puts "Target Found: #{target.name}"

    if [
      "FBSDKCoreKit",
      "FBSDKLoginKit",
      "FBSDKShareKit",
      "FirebaseDynamicLinks",
      "React",
      "React-Core",
      "React-DevSupport",
      "React-RCTLinking"
    ].include?(target.name)

      puts "Updating build configurations on target: #{target.name}"

      target.build_configurations.each do |build_configuration|
        if build_configuration.build_settings['APPLICATION_EXTENSION_API_ONLY'] == 'YES'
          build_configuration.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
        end
      end
    end
  end

  # Resolve react-native-config issues
  # https://github.com/luggit/react-native-config/issues/187#issuecomment-514857871
  installer.pods_project.targets.each do |target|
    targets_to_ignore = %w(React)
    # targets_to_ignore = %w(React yoga)

    # React is manually linked
    if targets_to_ignore.include? target.name
      target.remove_from_project
    end

    if target.name == 'react-native-config'
      phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
      phase.shell_script = "cd ../../"\
                            " && RNC_ROOT=./node_modules/react-native-config/"\
                            " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
                            " && export BUILD_DIR=$RNC_ROOT/ios/ReactNativeConfig"\
                            " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"

      target.build_phases << phase
      target.build_phases.move(phase,0)
    end
  end
end