install! 'cocoapods', :deterministic_uuids => false
platform :ios, '11.0'

def shared_pods
  # React Native Core
  rn_path = '../node_modules/react-native'
  pod 'yoga', :path => "#{rn_path}/ReactCommon/yoga/yoga.podspec"
  pod 'React', path: rn_path, subspecs: [
    'Core',
    'CxxBridge',
    'DevSupport',
    'RCTActionSheet',
    'RCTAnimation',
    'RCTGeolocation',
    'RCTImage',
    'RCTLinkingIOS',
    'RCTNetwork',
    'RCTSettings',
    'RCTText',
    'RCTVibration',
    'RCTWebSocket',
  ]
  pod 'DoubleConversion', :podspec => "#{rn_path}/third-party-podspecs/DoubleConversion.podspec"
  pod 'glog', :podspec => "#{rn_path}/third-party-podspecs/glog.podspec"
  pod 'Folly', :podspec => "#{rn_path}/third-party-podspecs/Folly.podspec"

  # React Native Additional
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  # pod 'react-native-config', :path => '../node_modules/react-native-config'
  pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'
  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'

  # Firebase
  pod 'Firebase/Auth', '~> 5.20.1'
  pod 'Firebase/Core', '~> 5.20.1'
  pod 'Firebase/DynamicLinks', '~> 5.20.1'
  pod 'Firebase/Firestore', '~> 5.20.1'
  pod 'Firebase/Messaging', '~> 5.20.1'
  
  # Crashlytics
  pod 'Fabric', '~> 1.9.0'
  pod 'Crashlytics', '~> 3.12.0'

  # Codepush
  pod 'CodePush', :path => '../node_modules/react-native-code-push'
  
end

target 'shayr' do
  shared_pods

  # Facebook
  pod 'FBSDKCoreKit', '~> 4.40.0'
  pod 'FBSDKLoginKit', '~> 4.40.0'
  pod 'FBSDKShareKit', '~> 4.40.0'  

end

target 'ShareExtension' do
  shared_pods
end


post_install do |installer|
  # Fix Fabric Headers
  system('mkdir ./Pods/Headers/Public/Fabric')
  system('cp ./Pods/Fabric/iOS/Fabric.framework/Headers/Fabric.h ./Pods/Headers/Public/Fabric/Fabric.h')
  system('cp ./Pods/Fabric/iOS/Fabric.framework/Headers/FABAttributes.h ./Pods/Headers/Public/Fabric/FABAttributes.h')
  
  # Fix Crashlytics Headers
  system('mkdir ./Pods/Headers/Public/Crashlytics')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/Crashlytics.h ./Pods/Headers/Public/Crashlytics/Crashlytics.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSStackFrame.h ./Pods/Headers/Public/Crashlytics/CLSStackFrame.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSReport.h ./Pods/Headers/Public/Crashlytics/CLSReport.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSLogging.h ./Pods/Headers/Public/Crashlytics/CLSLogging.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/CLSAttributes.h ./Pods/Headers/Public/Crashlytics/CLSAttributes.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/Answers.h ./Pods/Headers/Public/Crashlytics/Answers.h')
  system('cp ./Pods/Crashlytics/iOS/Crashlytics.framework/Headers/ANSCompatibility.h ./Pods/Headers/Public/Crashlytics/ANSCompatibility.h')

  installer.pods_project.targets.each do |target|
    # Fix DynamicLinks breaking the Share Extension
    if target.name.end_with? "DynamicLinks"
      target.build_configurations.each do |build_configuration|
        if build_configuration.build_settings['APPLICATION_EXTENSION_API_ONLY'] == 'YES'
          build_configuration.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
        end
      end
    end
    if target.name == "React"
      target.build_configurations.each do |build_configuration|
        if build_configuration.build_settings['APPLICATION_EXTENSION_API_ONLY'] == 'YES'
          build_configuration.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
        end
      end
      target.remove_from_project
    end
  end
end